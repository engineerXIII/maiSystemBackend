definitions:
  httpErrors.RestError:
    properties:
      error:
        type: string
      status:
        type: integer
    type: object
  models.Product:
    properties:
      color:
        maxLength: 30
        type: string
      cost:
        type: integer
      created_at:
        type: string
      description:
        maxLength: 126
        type: string
      factory:
        maxLength: 30
        type: string
      product_id:
        type: string
      product_name:
        maxLength: 30
        type: string
      updated_at:
        type: string
    required:
    - color
    - cost
    - description
    - factory
    - product_name
    type: object
  models.ProductList:
    properties:
      has_more:
        type: boolean
      page:
        type: integer
      products:
        items:
          $ref: '#/definitions/models.Product'
        type: array
      size:
        type: integer
      total_count:
        type: integer
      total_pages:
        type: integer
    type: object
  models.User:
    properties:
      created_at:
        type: string
      email:
        maxLength: 60
        type: string
      first_name:
        maxLength: 30
        type: string
      last_name:
        maxLength: 30
        type: string
      login_date:
        type: string
      password:
        minLength: 6
        type: string
      role:
        maxLength: 10
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    required:
    - first_name
    - last_name
    - password
    type: object
  models.UsersList:
    properties:
      has_more:
        type: boolean
      page:
        type: integer
      size:
        type: integer
      total_count:
        type: integer
      total_pages:
        type: integer
      users:
        items:
          $ref: '#/definitions/models.User'
        type: array
    type: object
info:
  contact: {}
paths:
  /auth/{id}:
    delete:
      consumes:
      - application/json
      description: some description
      parameters:
      - description: user_id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Delete user account
      tags:
      - Auth
    get:
      consumes:
      - application/json
      description: get string by ID
      parameters:
      - description: user_id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: get user by id
      tags:
      - Auth
    put:
      consumes:
      - application/json
      description: update existing user
      parameters:
      - description: user_id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Update user
      tags:
      - Auth
  /auth/all:
    get:
      consumes:
      - application/json
      description: Get the list of all users
      parameters:
      - description: page number
        format: page
        in: query
        name: page
        type: integer
      - description: number of elements per page
        format: size
        in: query
        name: size
        type: integer
      - description: filter name
        format: orderBy
        in: query
        name: orderBy
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UsersList'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Get users
      tags:
      - Auth
  /auth/find:
    get:
      consumes:
      - application/json
      description: Find user by name
      parameters:
      - description: username
        format: username
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UsersList'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Find by name
      tags:
      - Auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: login user, returns user and set session
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Login new user
      tags:
      - Auth
  /auth/logout:
    post:
      consumes:
      - application/json
      description: logout user removing session
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: Logout user
      tags:
      - Auth
  /auth/me:
    get:
      consumes:
      - application/json
      description: Get current user by id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Get user by id
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: register new user, returns user and token
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
      summary: Register new user
      tags:
      - Auth
  /auth/token:
    get:
      consumes:
      - application/json
      description: Get CSRF token, required auth session cookie
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Get CSRF token
      tags:
      - Auth
  /product:
    get:
      consumes:
      - application/json
      description: Get product list handler
      parameters:
      - description: page number
        format: page
        in: query
        name: page
        type: integer
      - description: size of page
        format: size
        in: query
        name: size
        type: integer
      - description: filter name
        format: orderBy
        in: query
        name: orderBy
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ProductList'
      summary: Get product list
      tags:
      - Product
  /product/{id}:
    delete:
      consumes:
      - application/json
      description: Delete product handler
      parameters:
      - description: product_id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: Delete product
      tags:
      - Product
    get:
      consumes:
      - application/json
      description: Get by id product handler
      parameters:
      - description: product_id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
      summary: Get by id product
      tags:
      - Product
    put:
      consumes:
      - application/json
      description: Update product handler
      parameters:
      - description: product_id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Product'
      summary: Update product
      tags:
      - Product
  /product/create:
    post:
      consumes:
      - application/json
      description: Create product handler
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Product'
      summary: Create product
      tags:
      - Product
  /product/search:
    get:
      consumes:
      - application/json
      description: Search product by name handler
      parameters:
      - description: page number
        format: page
        in: query
        name: page
        type: integer
      - description: size of page
        format: size
        in: query
        name: size
        type: integer
      - description: filter name
        format: orderBy
        in: query
        name: orderBy
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ProductList'
      summary: Search product by name
      tags:
      - Product
swagger: "2.0"
